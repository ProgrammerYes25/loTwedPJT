/* style.css */

/* 기본 설정: 기존 html/body 스타일 유지하면서 폰트 설정 */
html {
  height: 100%;
  width: 100%;
  /* 기존의 아름다운 그라데이션 배경 유지 */
  background: linear-gradient(135deg, #a2d2ff 0%, #bae5e5 100%);
}

body {
  font-family: 'Arial Rounded MT Bold', Arial, sans-serif; /* 기존 폰트 유지 */
  margin: 0;
  padding: 20px;
  display: flex; /* flexbox를 사용하여 중앙 정렬 및 레이아웃 제어 */
  justify-content: center;
  align-items: flex-start; /* 상단 정렬 */
  min-height: 100vh; /* 최소 높이를 뷰포트 높이로 설정 */
  font-size: 16px;
  line-height: 1.6;
  color: #333; /* 기본 텍스트 색상 */
}

/* center 태그를 대체하거나 감싸는 역할을 할 컨테이너 스타일 */
/* 기존 .container 클래스의 부드러운 느낌을 유지하면서 확장 */
.main-container {
  width: 100%;
  max-width: 1100px; /* 너무 넓게 퍼지지 않도록 최대 너비 설정 */
  padding: 30px;
  border-radius: 20px; /* 기존 컨테이너와 유사하게 둥근 모서리 */
  background-color: rgba(255, 255, 255, 0.9); /* 기존 컨테이너보다 약간 더 불투명하게 */
  box-shadow: 0 10px 30px rgba(162, 210, 255, 0.3); /* 배경 그라데이션과 어울리는 그림자 */
  margin: 20px auto; /* 중앙 정렬 */
  border: 2px solid rgba(255, 255, 255, 0.7); /* 흰색 투명 보더 */
  text-align: center; /* 내부 요소 중앙 정렬 */
}


/* 제목 스타일: 기존 스타일 유지 */
h1 {
  color: #6d6875; /* 기존 색상 유지 */
  text-shadow: 2px 2px 4px rgba(157, 129, 137, 0.3); /* 기존 그림자 유지 */
  font-size: 2.8em; /* 기존보다 약간 크게 */
  font-weight: bold;
  margin-bottom: 10px; /* 제목 아래 여백 추가 */
  letter-spacing: -1px; /* 글자 간격 조절 */
}

h2 {
  color: #6d6875; /* 기존 h2 색상을 더 부드럽게 */
  text-shadow: 1px 1px 3px rgba(181, 131, 141, 0.1); /* 그림자 부드럽게 */
  font-size: 1.8em; /* 기존과 유사 */
  margin-top: 10px;
  margin-bottom: 30px; /* 아래 여백 늘림 */
  font-weight: normal; /* 너무 두껍지 않게 */
}

/* 기존 val 클래스 스타일 유지 */
.val {
  color: #ffffff;
  text-shadow: 2px 2px 4px rgba(157, 129, 137, 0.3);
  font-size: 1.5em;
}

/* 기존 login:h2 클래스 스타일 유지 (html에 .login 클래스가 있다면 적용) */
.login:h2 {
  color: #000;
}

/* 이미지 스타일 (기존과 동일) */
img {
  width: 100px;
  height: 100px;
}

/* 테이블 스타일: 깔끔하고 믿음직스러운 디자인 */
table {
  width: 100%;
  border-collapse: separate; /* 셀 간 간격 주기 위해 separate 사용 */
  border-spacing: 0 0; /* 셀 사이에 세로 간격 12px로 늘림 */
  margin-top: 25px;
  background-color: #ffffff; /* 테이블 배경색 */
  border-radius: 15px; /* 테이블 모서리도 부드럽게 */
  overflow: hidden; /* 모서리 둥글게 할 때 내용이 튀어나오지 않게 */
  box-shadow: 0 6px 15px rgba(0, 0, 0, 0.1); /* 테이블에도 은은한 그림자 */
}

thead th {
  background: linear-gradient(45deg, #a2d2ff, #bae5e5); /* 배경 그라데이션과 어울리는 헤더 그라데이션 */
  color: #5d5d5d; /* 글자색은 너무 밝지 않게 */
  padding: 20px 10px;
  text-align: center;
  font-weight: bold;
  font-size: 1.1em;
  border-bottom: 2px solid rgba(255, 255, 255, 0.6); /* 헤더 하단에 부드러운 선 */
}

/* 첫 번째와 마지막 헤더 모서리 둥글게 */
thead th:first-child {
  border-top-left-radius: 15px;
}
thead th:last-child {
  border-top-right-radius: 15px;
}

tbody tr {
  background-color: #fcfdfe; /* 행 배경색을 거의 흰색으로 */
  transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.3s ease; /* 호버 효과 */
  border-radius: 10px; /* 각 행의 모서리를 부드럽게 */
  box-shadow: 0 3px 8px rgba(0, 0, 0, 0.04); /* 각 행에도 약한 그림자 */
}

tbody tr:hover {
  background-color: #e6f7ff; /* 호버 시 밝은 파란색 계열 */
  transform: translateY(-3px); /* 살짝 떠오르는 효과 강조 */
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.12); /* 호버 시 그림자 강화 */
}

tbody td {
  padding: 15px 10px; /* 패딩 늘림 */
  text-align: center;
  border: none; /* 셀 테두리 제거 */
  white-space: nowrap; /* 내용이 너무 길면 줄바꿈 방지 */
  color: #555; /* 데이터 텍스트 색상 */
}

/* 마지막 행의 하단 모서리를 둥글게 */
tbody tr:last-child td:first-child {
  border-bottom-left-radius: 10px;
}
tbody tr:last-child td:last-child {
  border-bottom-right-radius: 10px;
}

/* 업로드 버튼 스타일: 기존 스타일을 유지하며 약간 개선 */
button {
  background: linear-gradient(45deg, #a2d2ff, #bae5e5); /* 기존 그라데이션과 어울리게 */
  border: none; /* 기존 dashed border 대신 solid로 변경 */
  border-radius: 25px; /* 기존과 동일 */
  padding: 14px 28px; /* 패딩 약간 늘림 */
  margin: 20px 0; /* 여백 조절 */
  color: #5d5d5d; /* 텍스트 색상 변경 */
  font-size: 1.1em; /* 폰트 사이즈 약간 크게 */
  font-weight: bold;
  cursor: pointer;
  position: relative;
  overflow: hidden; /* 가상 요소가 버튼 밖으로 나가지 않게 */
  transition: all 0.4s ease; /* 전환 효과 시간 늘림 */
  box-shadow: 0 6px 15px rgba(162, 210, 255, 0.3); /* 버튼 그림자 강화 */
}

/* 기존 button::before 대신 새로운 hover 이펙트 */
button::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  background: rgba(255, 255, 255, 0.4); /* 밝은 하이라이트 */
  border-radius: 50%;
  transform: translate(-50%, -50%);
  transition: width 0.4s ease, height 0.4s ease;
  z-index: 0;
}

button:hover {
  transform: translateY(-3px); /* 호버 시 살짝 떠오름 */
  box-shadow: 0 10px 25px rgba(162, 210, 255, 0.4); /* 그림자 강화 */
}

button:hover::before {
  width: 200%;
  height: 200%;
}

button:active {
  transform: translateY(0); /* 클릭 시 원위치 */
  box-shadow: 0 4px 10px rgba(162, 210, 255, 0.2);
}

/* 업로드 메시지 스타일 */
#uploadMessage {
  margin-top: 15px;
  font-size: 1.0em;
  font-weight: bold;
  color: #5d5d5d; /* 기본 텍스트 색상 */
  padding: 8px;
  border-radius: 5px;
  min-height: 20px; /* 메시지가 없을 때 공간 확보 */
}
/* 성공 메시지 */
#uploadMessage[style*="green"] {
  color: #4CAF50; /* 초록색 */
}
/* 오류 메시지 */
#uploadMessage[style*="red"] {
  color: #F44336; /* 빨간색 */
}
/* 업로드 중 메시지 */
#uploadMessage[style*="blue"] {
  color: #2196F3; /* 파란색 */
}


/* 데이터 없음 메시지 스타일 */
tbody td[colspan="6"] {
  font-style: italic;
  color: #999;
  padding: 20px;
}

/* 반응형 디자인을 위한 미디어 쿼리 */
@media (max-width: 768px) {
  center {
      padding: 20px;
      margin: 10px;
  }
  h1 {
      font-size: 2.2em;
  }
  h2 {
      font-size: 1.4em;
  }
  table, thead, tbody, th, td, tr {
      display: block; /* 모바일에서 테이블을 블록 요소처럼 보이게 */
  }
  thead {
      display: none; /* 모바일에서는 헤더 숨김 (각 행에 라벨을 붙이는 것이 일반적) */
  }
  tbody tr {
      margin-bottom: 15px;
      border: 1px solid #ddd;
      border-radius: 10px;
      box-shadow: 0 4px 8px rgba(0,0,0,0.1);
  }
  tbody td {
      border-bottom: 1px solid #eee;
      text-align: right; /* 내용을 오른쪽 정렬 */
      padding-left: 50%; /* 라벨 공간 확보 */
      position: relative;
  }
  tbody td:before {
      content: attr(data-label); /* data-label 속성으로 라벨 표시 */
      position: absolute;
      left: 10px;
      width: 45%;
      padding-right: 10px;
      white-space: nowrap;
      text-align: left;
      font-weight: bold;
      color: #555;
  }
  /* 각 셀에 data-label 추가 예시 (JavaScript에서 동적으로 추가하거나 HTML에 직접 추가) */
  /* <td>${record.timestamp_readable}</td>  -> <td data-label="시간">${record.timestamp_readable}</td> */
}

@media (max-width: 768px) {
  .main-container {
      padding: 20px;
      margin: 10px;
  }
  h1 {
      font-size: 2.2em;
  }
  h2 {
      font-size: 1.4em;
  }
  table, thead, tbody, th, td, tr {
      display: block; /* 모바일에서 테이블을 블록 요소처럼 보이게 */
  }
  thead {
      display: none; /* 모바일에서는 헤더 숨김 (각 행에 라벨을 붙이는 것이 일반적) */
  }
  tbody tr {
      margin-bottom: 15px;
      border: 1px solid #ddd;
      border-radius: 10px;
      box-shadow: 0 4px 8px rgba(0,0,0,0.1);
  }
  tbody td {
      border-bottom: 1px solid #eee;
      text-align: right; /* 내용을 오른쪽 정렬 */
      padding-left:80%; /* 라벨 공간 확보 */
      position: relative;
  }
  tbody td:before {
      content: attr(data-label); /* data-label 속성으로 라벨 표시 */
      position: absolute;
      left: 10px;
      width: 45%;
      padding-right: 10px;
      white-space: nowrap;
      text-align: left;
      font-weight: bold;
      color: #555;
  }
}
